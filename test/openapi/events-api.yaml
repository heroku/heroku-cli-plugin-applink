openapi: 3.1.0
info:
  title: Heroku Events Public API
  description: Heroku Events Public API definitions for testing
  version: 1
servers:
  - url: https://test-events-public-api-4c6a7848ebb9.herokuapp.com
paths:
  /v1/tenants/{tenant_id}/authorizations:
    get:
      operationId: authorization_list
      parameters:
        - $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationListResponse"
              examples:
                default_example:
                  $ref: "#/components/examples/AuthorizationListResponseExample"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "400":
          $ref: '#/components/responses/NotFound'
      security:
        - bearerHttpAuthentication: []
  /v1/tenants/{tenant_id}/authorizations/{authorization_id}:
    get:
      operationId: authorization_info
      parameters:
        - $ref: "#/components/parameters/TenantId"
        - $ref: "#/components/parameters/AuthorizationId"
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationResponse"
              examples:
                default_example:
                  $ref: "#/components/examples/AuthorizationResponseExample"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
        - bearerHttpAuthentication: []
  /v1/tenants/{tenant_id}/platforms/{platform_slug}/authorizations:
    post:
      operationId: authorization_create_by_platform
      parameters:
        - $ref: "#/components/parameters/TenantId"
        - $ref: "#/components/parameters/PlatformSlug"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationCreateByPlatformBody"
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationResponse"
              examples:
                default_example:
                  $ref: "#/components/examples/AuthorizationResponseExample"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
        - bearerHttpAuthentication: []
components:
  examples:
    AuthorizationResponseExample:
      summary: Authorization info response
      value:
        id: 1c721868-2d4c-4d6c-9444-c0a1bb777f83
        params:
          org_name: example-org
          url: https://example-org.my.salesforce.com
        platform: salesforce
    AuthorizationListResponseExample:
      summary: List authorizations response
      value:
        - id: 1c721868-2d4c-4d6c-9444-c0a1bb777f83
          params:
            org_name: example-org
            url: https://example-org.my.salesforce.com
          platform: salesforce
        - id: 50ca583a-71cf-4112-9704-6b168b6b05a4
          params:
            org_name: another-org
            url: https://another-org.my.salesforce.com
          platform: salesforce
  parameters:
    AuthorizationId:
      name: authorization_id
      in: path
      description: Identifier for a Heroku Events authorization
      required: true
      schema:
        $ref: "#/components/schemas/Identifier"
    PlatformSlug:
      name: platform_slug
      in: path
      description: platform slug
      required: true
      schema:
        $ref: "#/components/schemas/PlatformSlug"
    TenantId:
      name: tenant_id
      in: path
      description: Identifier for a tenant.
      required: true
      schema:
        $ref: "#/components/schemas/Identifier"
  responses:
    BadRequest:
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Authorization:
      description: Heroku Events authorization
      type: object
      properties:
        extra:
          description: additional attributes
          type: object
          properties:
            redirect_uri:
              type: string
              description: OAuth flow redirection URI
              example: https://dashboard.heroku.com
        id:
          schema:
            $ref: "#/components/schemas/Identifier"
        params:
          description: exposed authorization params
          type: object
          properties:
            org_name:
              type: string
              description: authorizer instance name
              example: example-org
            url:
              type: string
              description: authorizer URL
              example: https://example.my.salesforce.com
        platform:
          $ref: "#/components/schemas/PlatformSlug"
      required:
        - id
        - params
    AuthorizationCreateByPlatformBody:
      description: payload for authorization create
      type: object
      properties:
        org_name:
          schema:
            $ref: "#/components/schemas/OrgName"
      required:
        - org_name
    AuthorizationResponse:
      description: Info for Heroku Events authorizations
      $ref: "#/components/schemas/Authorization"
    AuthorizationListResponse:
      description: List of Heroku Events authorizations
      type: array
      items:
        $ref: "#/components/schemas/Authorization"
    Error:
      type: object
      properties:
        id:
          type: string
          example: error-id
        message:
          type: string
          example: Error message
    Identifier:
      type: string
      description: unique identifier
      format: uuid
      example: 01234567-89ab-cdef-0123-456789abcdef
    OrgName:
      type: string
      description: Salesforce Org instance name
      example: example-org
    PlatformSlug:
      type: string
      description: platform slug
      enum:
        - salesforce
  securitySchemes:
    bearerHttpAuthentication:
      description: Bearer token
      type: http
      scheme: Bearer
      bearerFormat: string